/*
 * Copyright 2018 Florent Biville (@fbiville)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package versioning

import (
	"fmt"
	"io/ioutil"
	"os"
)

func GetLatestExecutionRevision(vcs Vcs) (string, error) {
	root, err := vcs.Root()
	if err != nil {
		return "", err
	}

	path := fmt.Sprintf("%s/%s", root, ".headache-run")
	info, err := findOrCreateTrackingFile(path)
	if err != nil {
		return "", err
	}
	if info != nil && !info.Mode().IsRegular() {
		return "", fmt.Errorf("%s should be a regular file", path)
	}

	sha, err := vcs.LatestRevision(path)
	if err != nil {
		return "", err
	}
	return sha, nil
}

func findOrCreateTrackingFile(path string) (os.FileInfo, error) {
	info, err := os.Stat(path)
	if os.IsNotExist(err) {
		err := ioutil.WriteFile(path, []byte("# Generated by headache -- commit me!"), 0640)
		return info, err
	}
	return info, nil
}
